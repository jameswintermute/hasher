#!/bin/bash
# Author James Wintermute, December 2022. 

#Count the number of CPU cores
cores=`cat /proc/cpuinfo | grep processor | wc -l`
multiplier=$(( 4* $cores ))

# Set the output filename
filename='hasher-'`date +"%Y-%m-%d-%H%M"`'.txt'
error='hasher-'`date +"%Y-%m-%d-%H%M"`'-error.txt'
cleanup='hasher-'`date +"%Y-%m-%d-%H%M"`'-cleanup.txt'
duplicate='hasher-'`date +"%Y-%m-%d-%H%M"`'-duplicate-hashes.txt'

#Read the path to hash
echo "Welcome to Hasher."
echo Your current path is: $(pwd)
read -p "Please enter a path to start hashing from: " $r1
parent=$(dirname "$r1")

# Files to find
file_include_list=( "Thumbs.db"
"desktop.ini"
".DS_Store")

# Dirs to find
dir_clean_list=( '.wdmc'
'@eaDir')

# Create hash file
        find -type d -name $dir_clean_list | find -type f -name $file_include_list | xargs -P $cores -L $multiplier 1>$cleanup 2>$error
	echo "Cleanup list written. Moving to main hashing."
	time find "$parent" -type f -print0 | xargs -P $cores -L $multiplier -0 sha1sum | sed 's\  \,\g' 1>>$filename 2>>$error | watch tail -n 5 $filename
	echo Hashing results output to $filename
	echo Outputting duplicate hashes
	cat $filename | cut -f1 -d"," | uniq -d >> $duplicate
